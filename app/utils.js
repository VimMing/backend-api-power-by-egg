"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getWhereClauses = exports.formatTime = exports.lunarToSolar = void 0;
const LunarCalendar = require('lunar-calendar');
const sequelize_1 = require("sequelize");
function lunarToSolar(y, m, d) {
    //
    const map = {
        2020: 4,
        2023: 2,
        2025: 6,
        2028: 5,
        2031: 3,
        2033: 11,
        2036: 6,
        2039: 5,
        2042: 2,
    };
    // eslint-disable-next-line prefer-const
    // let ly = y - 1,
    //   lm = m;
    // if (map[ly] && map[ly] < lm) {
    //   lm = lm + 1;
    // }
    // 需要获得农历年
    const today = new Date();
    const lunarDate = LunarCalendar.solarToLunar(today.getFullYear(), today.getMonth() + 1, today.getDate());
    y = lunarDate.lunarYear;
    if (map[y] && map[y] < m) {
        m = m + 1;
    }
    // const l_s = LunarCalendar.lunarToSolar(ly, lm, d);
    // const c_s = LunarCalendar.lunarToSolar(y, m, d);
    // if (parseInt(l_s.year) === +y) {
    //   return l_s;
    // }
    return LunarCalendar.lunarToSolar(y, m, d);
}
exports.lunarToSolar = lunarToSolar;
function formatTime(s, m, h, d, M, y) {
    const t = new Date();
    if (s != null) {
        t.setSeconds(s);
    }
    if (m != null) {
        t.setMinutes(m);
    }
    if (h != null) {
        t.setHours(h);
    }
    if (d != null) {
        t.setDate(d);
    }
    if (M != null) {
        t.setMonth(M);
    }
    if (y != null) {
        t.setFullYear(y);
    }
    return t;
}
exports.formatTime = formatTime;
function getWhereClauses(forms) {
    const searchForm = forms.filter((i) => i.fieldValue);
    const andLogics = searchForm.filter((i) => i.logic === 'AND');
    const orLogics = searchForm.filter((i) => i.logic === 'OR');
    const andClauses = andLogics.map((i) => {
        return {
            [i.fieldCode]: {
                [sequelize_1.Op[i.operator]]: i.fieldValue,
            },
        };
    });
    const orClauses = orLogics.map((i) => {
        return {
            [i.fieldCode]: {
                [sequelize_1.Op[i.operator]]: i.fieldValue,
            },
        };
    });
    const where = {};
    if (andClauses.length) {
        where[sequelize_1.Op.and] = andClauses;
    }
    if (orClauses.length) {
        where[sequelize_1.Op.or] = orClauses;
    }
    return where;
}
exports.getWhereClauses = getWhereClauses;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ1dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxNQUFNLGFBQWEsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUNoRCx5Q0FBK0I7QUFDL0IsU0FBZ0IsWUFBWSxDQUMxQixDQUFTLEVBQ1QsQ0FBUyxFQUNULENBQVM7SUFFVCxFQUFFO0lBQ0YsTUFBTSxHQUFHLEdBQUc7UUFDVixJQUFJLEVBQUUsQ0FBQztRQUNQLElBQUksRUFBRSxDQUFDO1FBQ1AsSUFBSSxFQUFFLENBQUM7UUFDUCxJQUFJLEVBQUUsQ0FBQztRQUNQLElBQUksRUFBRSxDQUFDO1FBQ1AsSUFBSSxFQUFFLEVBQUU7UUFDUixJQUFJLEVBQUUsQ0FBQztRQUNQLElBQUksRUFBRSxDQUFDO1FBQ1AsSUFBSSxFQUFFLENBQUM7S0FDUixDQUFDO0lBQ0Ysd0NBQXdDO0lBQ3hDLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osaUNBQWlDO0lBQ2pDLGlCQUFpQjtJQUNqQixJQUFJO0lBQ0osVUFBVTtJQUNWLE1BQU0sS0FBSyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7SUFDekIsTUFBTSxTQUFTLEdBQUcsYUFBYSxDQUFDLFlBQVksQ0FDMUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxFQUNuQixLQUFLLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxFQUNwQixLQUFLLENBQUMsT0FBTyxFQUFFLENBQ2hCLENBQUM7SUFDRixDQUFDLEdBQUcsU0FBUyxDQUFDLFNBQVMsQ0FBQztJQUN4QixJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQ3hCLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0tBQ1g7SUFDRCxxREFBcUQ7SUFDckQsbURBQW1EO0lBRW5ELG1DQUFtQztJQUNuQyxnQkFBZ0I7SUFDaEIsSUFBSTtJQUVKLE9BQU8sYUFBYSxDQUFDLFlBQVksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQzdDLENBQUM7QUExQ0Qsb0NBMENDO0FBRUQsU0FBZ0IsVUFBVSxDQUN4QixDQUFTLEVBQ1QsQ0FBUyxFQUNULENBQVMsRUFDVCxDQUFTLEVBQ1QsQ0FBUyxFQUNULENBQVM7SUFFVCxNQUFNLENBQUMsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO0lBQ3JCLElBQUksQ0FBQyxJQUFJLElBQUksRUFBRTtRQUNiLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDakI7SUFDRCxJQUFJLENBQUMsSUFBSSxJQUFJLEVBQUU7UUFDYixDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ2pCO0lBQ0QsSUFBSSxDQUFDLElBQUksSUFBSSxFQUFFO1FBQ2IsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNmO0lBQ0QsSUFBSSxDQUFDLElBQUksSUFBSSxFQUFFO1FBQ2IsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNkO0lBQ0QsSUFBSSxDQUFDLElBQUksSUFBSSxFQUFFO1FBQ2IsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNmO0lBQ0QsSUFBSSxDQUFDLElBQUksSUFBSSxFQUFFO1FBQ2IsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNsQjtJQUNELE9BQU8sQ0FBQyxDQUFDO0FBQ1gsQ0FBQztBQTVCRCxnQ0E0QkM7QUFRRCxTQUFnQixlQUFlLENBQUMsS0FBNEI7SUFDMUQsTUFBTSxVQUFVLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3JELE1BQU0sU0FBUyxHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLEtBQUssS0FBSyxDQUFDLENBQUM7SUFDOUQsTUFBTSxRQUFRLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssS0FBSyxJQUFJLENBQUMsQ0FBQztJQUM1RCxNQUFNLFVBQVUsR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUU7UUFDckMsT0FBTztZQUNMLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxFQUFFO2dCQUNiLENBQUMsY0FBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxVQUFVO2FBQy9CO1NBQ0YsQ0FBQztJQUNKLENBQUMsQ0FBQyxDQUFDO0lBQ0gsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFO1FBQ25DLE9BQU87WUFDTCxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsRUFBRTtnQkFDYixDQUFDLGNBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsVUFBVTthQUMvQjtTQUNGLENBQUM7SUFDSixDQUFDLENBQUMsQ0FBQztJQUNILE1BQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUNqQixJQUFJLFVBQVUsQ0FBQyxNQUFNLEVBQUU7UUFDckIsS0FBSyxDQUFDLGNBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxVQUFVLENBQUM7S0FDNUI7SUFDRCxJQUFJLFNBQVMsQ0FBQyxNQUFNLEVBQUU7UUFDcEIsS0FBSyxDQUFDLGNBQUUsQ0FBQyxFQUFFLENBQUMsR0FBRyxTQUFTLENBQUM7S0FDMUI7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUM7QUExQkQsMENBMEJDIn0=